---
- name: redmine root directory exist
  action: file dest={{redmine.root_dir}} state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}

- name: Create releases directory.
  action: file dest={{redmine.root_dir}}/releases state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}

- name: Check shared dir already exist.
  stat: path={{redmine.root_dir}}/shared
  register: shared_dir

- name: Create shared directory.
  action: file dest={{redmine.root_dir}}/shared state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}
  when: not shared_dir.stat.exists

- name: Create shared/config directory.
  action: file dest={{redmine.root_dir}}/shared/config state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}
  when: not shared_dir.stat.exists

- name: Create shared/config/unicorn directory.
  action: file dest={{redmine.root_dir}}/shared/config/unicorn state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}
  when: not shared_dir.stat.exists

- name: Create shared/files directory.
  action: file dest={{redmine.root_dir}}/shared/files state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}
  when: not shared_dir.stat.exists

- name: Create shared/vendor directory.
  action: file dest={{redmine.root_dir}}/shared/vendor state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}
  when: not shared_dir.stat.exists

- name: Create shared/log directory.
  action: file dest={{redmine.root_dir}}/shared/log state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}
  when: not shared_dir.stat.exists

- name: Create shared/plugins directory.
  action: file dest={{redmine.root_dir}}/shared/plugins state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}
  when: not shared_dir.stat.exists

- name: Create shared/tmp directory.
  action: file dest={{redmine.root_dir}}/shared/tmp state=directory mode=0755 owner={{redmine.user}} group={{redmine.group}}
  when: not shared_dir.stat.exists

- name: Check same redmine already exist.
  stat: path={{redmine.root_dir}}/releases/redmine-{{redmine.version}}
  register: redmine_archive

- name: Download redmine
  get_url: url="http://www.redmine.org/releases/redmine-{{redmine.version}}.tar.gz" dest={{redmine.root_dir}}/releases
  when: not redmine_archive.stat.exists
  become: yes
  become_user: "{{redmine.user}}"

- name: Extract redmine
  shell: cd {{redmine.root_dir}}/releases; tar zxf redmine-{{redmine.version}}.tar.gz
  when: not redmine_archive.stat.exists
  become: yes
  become_user: "{{redmine.user}}"

- name: Link to {{redmine.root_dir}}/redmine
  file: src={{redmine.root_dir}}/releases/redmine-{{redmine.version}} dest={{redmine.root_dir}}/redmine owner={{redmine.user}} group={{redmine.group}} mode=0755 state=link

- name: Copy database.yml
  template: src=database.yml.j2 dest={{redmine.root_dir}}/shared/config/database.yml

- name: Copy Gemfile.local
  template: src=Gemfile.local.j2 dest={{redmine.root_dir}}/shared/Gemfile.local

- name: Copy unicorn.rb
  template: src=unicorn.rb.j2 dest={{redmine.root_dir}}/shared/config/unicorn/production.rb

- name: Copy reset_symlinks script
  template: src=reset_symlinks.j2 dest={{redmine.root_dir}}/shared/reset_symlinks owner={{redmine.user}} group={{redmine.group}} mode=0775

- name: run reset_symlinks
  shell: cd {{redmine.root_dir}}/shared;./reset_symlinks
  become: yes
  become_user: "{{redmine.user}}"
